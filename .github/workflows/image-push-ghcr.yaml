name: Build Push to Local Registry

on:
  push:
    branches:
      - '*'
    tags-ignore:
      - 'release/*'

jobs:
  local:
    env:
      COMMIT_SHA: ${{github.sha}}
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5001:5000
    steps:
      - uses: fluxcd/flux2/action@main
      - uses: actions/checkout@v3
      - name: Set environment variable
        run: |
          COMMIT_SHA=$(git rev-parse --short HEAD)
          echo "COMMIT_SHA=$COMMIT_SHA" >> $GITHUB_ENV
      - name: Prepare
        id: prep
        run: |
          BRANCH=${GITHUB_REF##*/}
          TS=$(date +%s)
          REVISION=${GITHUB_SHA::8}
          BUILD_ID="${REVISION}-${TS}"
          LATEST_ID=latest
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            BUILD_ID=${GITHUB_REF/refs\/tags\//}
          fi
          echo ::set-output name=BUILD_DATE::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          echo ::set-output name=BUILD_ID::${BUILD_ID}
          echo ::set-output name=LATEST_ID::${LATEST_ID}          

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: network=host

      - name: Build and Push to Local Registry
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: localhost:5001/santoshdts/bookstore:${{ steps.prep.outputs.LATEST_ID }}

      - name: Set commit SHA
        id: set_commit_sha
        run: echo "::set-output name=COMMIT_SHA::$(git rev-parse --short HEAD)"
      
      - name: Publish Flux OCI artifact to GHCR
        id: Push_Artifact
        run: |
          flux push artifact oci://localhost:5001/manifests/bookstore:${{ steps.prep.outputs.VERSION }} \
            --path="./kustomize" \
            --source="${{ github.event.repository.html_url }}" \
            --revision="${GITHUB_REF_NAME}/${GITHUB_SHA}"
          flux tag artifact oci://localhost:5001/manifests/bookstore:${{ steps.prep.outputs.VERSION }} --tag latest
      
      
      - name: Image digest
        run: echo $COMMIT_SHA
      - name: Inspect
        run: |
          docker buildx imagetools inspect localhost:5001/bookstore-api/bookstore:latest
